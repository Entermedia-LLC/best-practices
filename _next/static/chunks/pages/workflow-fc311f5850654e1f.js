(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[627],{970:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/workflow",function(){return i(9925)}])},2430:function(e,t,i){"use strict";i.d(t,{Z:function(){return d}});var r=i(5893),a=i(7294),s=i(5675),n=i(8428);var o=function(e){var t=e.href,i=e.classes,a=void 0===i?[]:i,s=e.isExternal,n=e.children;return(0,r.jsx)("a",{href:t,className:a.join(" "),rel:s&&"noreferrer noopener",children:n})};var l=function(e){var t=e.id,i=e.level,a=e.classes,s=void 0===a?[]:a,n=e.onMouseEnter,o=e.onMouseLeave,l=e.children,c="h".concat(i);return(0,r.jsx)(c,{className:null===s||void 0===s?void 0:s.join(" "),id:t,onMouseEnter:n,onMouseLeave:o,children:l})},c=i(7028),h=i.n(c);var d=function(e){var t=e.id,i=e.level,c=e.classes,d=void 0===c?[]:c,u=e.showAnchor,p=e.children,m=(0,a.useState)(!1),g=m[0],f=m[1],j=[h().anchor];g&&j.push(h()["anchor--hover"]);var b=(0,r.jsx)(o,{href:"#".concat(t),classes:j,children:(0,r.jsx)(s.default,{src:"/images/icon-link.svg",width:14,height:14,alt:"Link icon",loader:n.Z})});return(0,r.jsxs)(l,{level:i,id:t,classes:d,onMouseEnter:function(){return f(!0)},onMouseLeave:function(){return f(!1)},children:[p,u&&b]})}},323:function(e,t,i){"use strict";i.d(t,{Z:function(){return f}});var r=i(5893),a=(i(7294),i(5675)),s=i(1664),n=i(8428),o=i(9026),l=i.n(o),c=function(){return(0,r.jsxs)("header",{className:l().header,children:[(0,r.jsx)(s.default,{href:"/",children:(0,r.jsx)("a",{children:(0,r.jsx)(a.default,{src:"images/logo.svg",width:121,height:23,alt:"Logo",loader:n.Z})})}),(0,r.jsxs)("div",{className:l().links,children:[(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://www.entermedia.com/",target:"_blank",rel:"noreferrer",children:(0,r.jsx)(a.default,{src:"images/website.svg",width:16,height:16,alt:"Website",loader:n.Z})})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://twitter.com/entermedia",target:"_blank",rel:"noreferrer",children:(0,r.jsx)(a.default,{src:"images/twitter.svg",width:16,height:16,alt:"Twitter",loader:n.Z})})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://www.facebook.com/entermedia.llc/",target:"_blank",rel:"noreferrer",children:(0,r.jsx)(a.default,{src:"images/facebook.svg",width:16,height:16,alt:"Facebook",loader:n.Z})})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://www.linkedin.com/company/entermedia-llc/",target:"_blank",rel:"noreferrer",children:(0,r.jsx)(a.default,{src:"images/linkedin.svg",width:16,height:16,alt:"LinkedIn",loader:n.Z})})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://github.com/ENTERMEDIA",target:"_blank",rel:"noreferrer",children:(0,r.jsx)(a.default,{src:"images/github.svg",width:16,height:16,alt:"Github",loader:n.Z})})})]}),(0,r.jsx)("a",{href:"https://github.com/Entermedia-LLC/best-practices",target:"_blank",rel:"noreferrer",className:l().button,children:"Contribute on Github"})]})]})},h=[{id:"best-practices",path:"/",title:"Best Practices",children:[{path:"/",id:"audience",title:"Audience"},{path:"/",id:"goal",title:"Goal"},{path:"/",id:"contributing",title:"Contributing"}]},{id:"css",path:"/css",title:"CSS",children:[{path:"/css",id:"philosophy",title:"Philosophy"},{path:"/css",id:"accessibility",title:"Accessibility"},{path:"/css",id:"performance",title:"Performance"},{path:"/css",id:"responsive-design",title:"Responsive Design"},{path:"/css",id:"syntax",title:"Syntax and Formatting"},{path:"/css",id:"documentation",title:"Documentation"},{path:"/css",id:"frameworks",title:"Frameworks"},{path:"/css",id:"aria-base-styles",title:"Structure & Base Styles"},{path:"/css",id:"further-reading",title:"Further Reading"}]},{id:"js",path:"/js",title:"JavaScript",children:[{id:"style",path:"/js",title:"Code Style, Tooling & Documentation"},{id:"design-patterns",path:"/js",title:"Design Patterns"},{id:"performance",path:"/js",title:"Performance"},{id:"client-side-data",path:"/js",title:"Client-side Data"},{id:"testing",path:"/js",title:"Unit and Integration Testing"},{id:"libraries",path:"/js",title:"Libraries"},{id:"js-react",path:"/js/react",title:"React.js"},{id:"next-js",path:"/js/nextjs",title:"Next.js"},{id:"refresher",path:"/js",title:"Code Reference/Refresher"}]},{id:"markup",path:"/markup",title:"Markup",children:[{id:"philosophy",path:"/markup",title:"Philosophy"},{id:"accessibility",path:"/markup",title:"Accessibility"},{id:"structure",path:"/markup",title:"Structure"},{id:"feature-detection",path:"/markup",title:"Feature Detection & Polyfills"},{id:"media",path:"/markup",title:"Media"},{id:"svg",path:"/markup",title:"SVG"}]},{id:"php",path:"/php",title:"PHP",children:[{id:"performance",path:"/php",title:"Performance"}]},{id:"tools",path:"/tools",title:"Tools",children:[{id:"local-development",path:"/tools",title:"Local Development Environments"},{id:"scaffolding",path:"/tools",title:"Scaffolding"},{id:"task-runners",path:"/tools",title:"Task Runners"},{id:"aria-package-managers",path:"/tools",title:"Package/Dependency Managers"},{id:"aria-version-control",path:"/tools",title:"Version Control"},{id:"aria-command-line",path:"/tools",title:"Command Line Tools"},{id:"aria-accessibility-testing",path:"/tools",title:"Accessibility Testing"},{id:"aria-visual-testing",path:"/tools",title:"Visual Regression Testing"},{id:"aria-commitlint",path:"/tools",title:"commitlint"}]},{id:"wordpress",path:"/wordpress",title:"WordPress",children:[{id:"performance",path:"/wordpress",title:"Performance"},{id:"wpgraphql",path:"/wordpress",title:"WPGraphQL"}]},{id:"drupal",path:"/drupal",title:"Drupal",children:[]},{id:"nextjs-drupal",path:"/nextjs-drupal",title:"Next.js for Drupal",children:[{id:"aria-getting-started",path:"/nextjs-drupal",title:"Project Setup"}]},{id:"design",path:"/design",title:"Project Design",children:[{id:"organization",path:"/design",title:"Organization"},{id:"package-management",path:"/design",title:"Package Management"}]},{id:"performance",path:"/performance",title:"Performance",children:[{id:"philosophy",path:"/performance",title:"Philosophy"}]},{id:"workflow",path:"/workflow",title:"Workflow",children:[{id:"github",path:"/workflow",title:"Git Feature Branch Workflow"}]},{id:"qa",path:"/qa",title:"Quality Assurance",children:[{id:"aria-front-end-checklist",path:"/qa",title:"Front-End Checklist"},{id:"reporting-issues",path:"/qa",title:"Reporting Issues"}]}],d=i(9879),u=i.n(d),p=function(){var e=function(t,i){var a=t.map((function(t,i){return function(t,i){return(0,r.jsxs)("li",{children:[(0,r.jsx)(s.default,{href:"".concat(t.path,"#").concat(t.id),children:(0,r.jsx)("a",{className:u().sidebar_link,children:t.title})}),t.children&&e(t.children,!0)]},i)}(t,i)})),n=[u().sidebar_list];return i&&n.push(u().sidebar_list__child),(0,r.jsx)("ul",{className:n.join(" "),children:a})};return(0,r.jsx)("aside",{className:u().sidebar,children:(0,r.jsx)("nav",{children:e(h)})})},m=i(7916),g=i.n(m);function f(e){var t=e.children;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(c,{}),(0,r.jsx)(p,{}),(0,r.jsx)("main",{className:g().main,children:t})]})}},8428:function(e,t){"use strict";t.Z=function(e){var t=e.src;return"https://entermedia-llc.github.io/best-practices/".concat(t)}},9925:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return d}});var r=i(5893),a=i(7294),s=i(9008),n=i(1664),o=i(323),l=i(2430),c=i(4725),h=i.n(c);i(1804),i(2963);function d(){return(0,a.useEffect)((function(){h().highlightAll()}),[]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.default,{children:(0,r.jsx)("title",{children:"Workflow | Entermedia Best Practices"})}),(0,r.jsxs)(o.Z,{children:[(0,r.jsx)(l.Z,{level:1,children:"Workflow"}),(0,r.jsx)(l.Z,{level:2,id:"github",showAnchor:!0,children:"Git Feature Branch Workflow"}),(0,r.jsxs)("p",{children:["Entermedia uses the Feature Branch Workflow for all GitHub repo projects. The core idea behind the Feature Branch Workflow is that all feature development should take place in a dedicated branch instead of the ",(0,r.jsx)("code",{children:"main"})," or ",(0,r.jsx)("code",{children:"develop"})," branch. This encapsulation makes it easy for multiple developers to work on a particular feature without disturbing the main codebase. It also means the ",(0,r.jsx)("code",{children:"main"})," branch will never contain broken code, which is a huge advantage for continuous integration environments."]}),(0,r.jsx)("p",{children:"Encapsulating feature development also makes it possible to leverage pull requests, which are a way to initiate discussions around a branch. They give other developers the opportunity to sign off on a feature before it gets integrated into the official project. Or, if you get stuck in the middle of a feature, you can open a pull request asking for suggestions from your colleagues. The point is, pull requests make it incredibly easy for your team to comment on each other\u2019s work."}),(0,r.jsx)(l.Z,{level:3,children:"How it Works"}),(0,r.jsxs)("p",{children:["All feature branches are created off the latest code state of a project, in Entermedia's projects, that will be the"," ",(0,r.jsx)("code",{children:"develop"})," branch."," ",(0,r.jsxs)("strong",{children:["Updates should never be pushed to the ",(0,r.jsx)("code",{children:"main"})," or"," ",(0,r.jsx)("code",{children:"develop"})," branches directly."]})]}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"language-sh",children:"git checkout develop\ngit fetch origin\ngit reset --hard origin/develop"})}),(0,r.jsx)("p",{children:"This switches the repo to the develop branch, pulls the latest commits and resets the repo's local copy of develop to match the latest version."}),(0,r.jsx)(l.Z,{level:4,children:"Create a new branch"}),(0,r.jsx)("p",{children:"Use a separate branch for each feature or issue you work on. After creating a branch, check it out locally so that any changes you make will be on that branch."}),(0,r.jsx)(l.Z,{level:5,children:"Branch naming convention"}),(0,r.jsx)("p",{children:"When naming branches, use the Jira issue number (i.e. project-183). This allows developers to quickly cross-reference the work done in that branch with the coorsponding issue number is Jira."}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"language-sh",children:"git checkout -b project-123"})}),(0,r.jsxs)("p",{children:["This checks out a branch called project-123 based on"," ",(0,r.jsx)("code",{children:"develop"}),", and the -b flag tells Git to create the branch if it doesn\u2019t already exist."]}),(0,r.jsx)(l.Z,{level:4,children:"Update, add, commit, and push changes"}),(0,r.jsx)("p",{children:"On this branch, edit, stage, and commit changes in the usual fashion, building up the feature with as many commits as necessary. Work on the feature and make commits like you would any time you use Git. When ready, push your commits, updating the feature branch on GitHub."}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"language-sh",children:'git status\ngit add <some-file>\ngit commit -m "build(initial setup, header): next.js setup and header component"'})}),(0,r.jsx)(l.Z,{level:5,children:"Commit messages"}),(0,r.jsxs)("p",{children:["Entermedia uses"," ",(0,r.jsx)("a",{href:"https://commitlint.js.org/",target:"_blank",rel:"noreferrer noopener",children:"commitlint"})," ","to standarize commit messages. See"," ",(0,r.jsx)(n.default,{href:"/tools#aria-commitlint",children:"commitlint"})," for more information."]}),(0,r.jsx)(l.Z,{level:4,children:"Push feature branch to remote"}),(0,r.jsx)("p",{children:"It\u2019s a good idea to push the feature branch up to the central repository. This serves as a convenient backup, when collaborating with other developers, this would give them access to view commits to the new branch."}),(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"language-sh",children:"git push origin project-123"})}),(0,r.jsxs)("p",{children:["This command pushes project-123 to the central repository (origin). To get feedback on the new feature branch, create a pull request into the"," ",(0,r.jsx)("code",{children:"develop"})," branch. From there, you can add reviewers and make sure everything is good to go before merging."]}),(0,r.jsx)(l.Z,{level:4,children:"Resolve feedback"}),(0,r.jsx)("p",{children:"Now teammates comment and approve the pushed commits. Resolve their comments locally, commit, and push the suggested changes to the feature branch. Your updates appear in the pull request."}),(0,r.jsxs)("p",{children:["Once all feedback has been resolved, the code reviewer will merge the feature branch into the ",(0,r.jsx)("code",{children:"develop"})," branch, then to the"," ",(0,r.jsx)("code",{children:"main"})," branch when all feature branches have been reviewed, merged, and ready to be deployed."]})]})]})}},7028:function(e){e.exports={anchor:"headline_anchor__RnNJ_","anchor--hover":"headline_anchor--hover__LYK0Y"}},9026:function(e){e.exports={header:"header_header__09iv7",button:"header_button__XTtvf",links:"header_links__gDZId"}},9879:function(e){e.exports={sidebar:"sidebar_sidebar__vTMos",sidebar_list:"sidebar_sidebar_list__1_JhE",sidebar_link:"sidebar_sidebar_link__Vu8ef",sidebar_list__child:"sidebar_sidebar_list__child__gxvCT"}},7916:function(e){e.exports={main:"Default_main__v1_uO"}},2963:function(){!function(e){var t=[/"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/.source,/'[^']*'/.source,/\$'(?:[^'\\]|\\[\s\S])*'/.source,/<<-?\s*(["']?)(\w+)\1\s[\s\S]*?[\r\n]\2/.source].join("|");e.languages["shell-session"]={command:{pattern:RegExp(/^/.source+"(?:"+/[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+(?::[^\0-\x1F$#%*?"<>:;|]+)?/.source+"|"+/[/~.][^\0-\x1F$#%*?"<>@:;|]*/.source+")?"+/[$#%](?=\s)/.source+/(?:[^\\\r\n \t'"<$]|[ \t](?:(?!#)|#.*$)|\\(?:[^\r]|\r\n?)|\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g,(function(){return t})),"m"),greedy:!0,inside:{info:{pattern:/^[^#$%]+/,alias:"punctuation",inside:{user:/^[^\s@:$#%*!/\\]+@[^\r\n@:$#%*!/\\]+/,punctuation:/:/,path:/[\s\S]+/}},bash:{pattern:/(^[$#%]\s*)\S[\s\S]*/,lookbehind:!0,alias:"language-bash",inside:e.languages.bash},"shell-symbol":{pattern:/^[$#%]/,alias:"important"}}},output:/.(?:.*(?:[\r\n]|.$))*/},e.languages["sh-session"]=e.languages.shellsession=e.languages["shell-session"]}(Prism)}},function(e){e.O(0,[247,521,774,888,179],(function(){return t=970,e(e.s=t);var t}));var t=e.O();_N_E=t}]);